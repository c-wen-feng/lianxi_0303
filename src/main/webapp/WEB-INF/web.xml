<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
<!--&lt;!&ndash;配置SpringMVC的前端控制器，对浏览器发送的请求进行统一处理&ndash;&gt;-->
<!--    <servlet>-->
<!--        <servlet-name>SpringMVC</servlet-name>-->
<!--        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>-->
<!--    </servlet>-->


<!--&lt;!&ndash;    /所匹配的请求可以使/login或HTML或.js或.css方式的请求路径-->
<!--        不包括.jsp请求路径的请求-->
<!--&ndash;&gt;-->
<!--    <servlet-mapping>-->
<!--        <servlet-name>SpringMVC</servlet-name>-->
<!--        <url-pattern>/</url-pattern>-->
<!--    </servlet-mapping>-->
    
<!--配置SpringMVC的前端控制器，对浏览器发送的请求进行统一处理-->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!-- 通过初始化参数指定SprinngMVC配置文件的位置和名称-->
        <init-param>
<!--            contextConfigLocation为固定值-->
            <param-name>contextConfigLocation</param-name>
<!--            使用classpath：表示从类路径查找配置文件，如src/main/resources-->
            <param-value>classpath:springMVC.xml</param-value>
        </init-param>
        
<!--        将前端控制器DispatcherServlet的初始化时间提前到服务器启动时-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>